name: Deploy to Cloud Run (Development)

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        description: Name of the target environment.
      ref:
        type: string
        required: true
        description: The tag or SHA to checkout.

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GAR_LOCATION: ${{ vars.GAR_LOCATION }}
  REPOSITORY: ${{ vars.REPOSITORY }}
  SERVICE: ${{ vars.SERVICE }}
  REGION: ${{ vars.REGION }}

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: "read"
      id-token: "write"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ secrets.WIF_PROVIDER }}"
          service_account: "${{ secrets.WIF_SERVICE_ACCOUNT }}"

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v1"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: Build and Push container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"

      # Accessing google secret manager
      - name: Access secret
        id: access_secret
        run: |-
          echo "DB_USERNAME=$(gcloud secrets versions access latest --secret=DB_USERNAME)"
          echo "DB_PASSWORD=$(gcloud secrets versions access latest --secret=DB_PASSWORD)"
          echo "DB_DATABASE=$(gcloud secrets versions access latest --secret=DB_DATABASE)"
          echo "DB_HOST=$(gcloud secrets versions access latest --secret=DB_HOST)"
          echo "DB_PORT=$(gcloud secrets versions access latest --secret=DB_PORT)"
          echo "JWT_SECRET=$(gcloud secrets versions access latest --secret=JWT_SECRET)"
          echo "JWT_EXPIRE=$(gcloud secrets versions access latest --secret=JWT_EXPIRE)"

      # Create Cloud Run YAML Service specification from template
      - name: Create service declaration
        run: |-
          export IMAGE="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
          SERVICE="${{ env.SERVICE }}-${{ inputs.environment }}"
          export NODE_ENV=${{ inputs.environment }}
          envsubst < ./.github/service/service.template.yaml > service.yaml

      # Deploy Cloud Run Service from the YAML Service specification
      - name: Deploy to cloud run
        id: deploy
        uses: "google-github-actions/deploy-cloudrun@v1"
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          metadata: service.yaml

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
